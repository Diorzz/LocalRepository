<UserControl x:Class="CommandTest20150416.Pages.CreateCommands.Code"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500">
    <Grid>
        <ScrollViewer>
            <TextBox Name="tb" TextWrapping="Wrap">
                private RoutedCommand clearCmd = new RoutedCommand("Clear", typeof(Code));

        private void InitiallizeCommand()
        {
            this.btn1.Command = this.clearCmd;
            this.clearCmd.InputGestures.Add(new KeyGesture(Key.C, ModifierKeys.Alt));

            this.btn1.CommandTarget = this.tb;

            CommandBinding cb = new CommandBinding();
            cb.Command = this.clearCmd;
            cb.CanExecute += new CanExecuteRoutedEventHandler(cb_CanExecult);
            cb.Executed += new ExecutedRoutedEventHandler(cb_Execult);

            this.stk1.CommandBindings.Add(cb);
        }

        void cb_CanExecult(object sender, CanExecuteRoutedEventArgs e)
        {
            if (string.IsNullOrEmpty(this.tb.Text)) { e.CanExecute = false; }
            else { e.CanExecute = true; e.Handled = true; }
        }

        void cb_Execult(object sender, ExecutedRoutedEventArgs e)
        {
            this.tb.Clear();
            e.Handled = true;
        }
            </TextBox>
        </ScrollViewer>
    </Grid>
</UserControl>
